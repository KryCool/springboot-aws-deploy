# version: 0.2
# phases:
#   pre_build:
#     commands:
#       - echo Logging in to Amazon ECR....
#       - aws --version
#       #- $(aws ecr get-login --region ap-south-1 --no-include-email)
#       - aws ecr get-login-password --region ap-southeast-1 | docker login --username AWS --password-stdin 660309174284.dkr.ecr.ap-southeast-1.amazonaws.com
#       - # Replace with this to your repository URI
#       - REPOSITORY_URI=660309174284.dkr.ecr.ap-southeast-1.amazonaws.com/springdemo
#       - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
#   build:
#     commands:
#       - echo Build started on `date`
#       - echo building the Jar file
#       - mvn clean package
#       - echo Building the Docker image...
#       - docker build -t $REPOSITORY_URI:latest .
#       - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
#   post_build:
#     commands:
#       - echo Build completed on `date`
#       - echo pushing to repo
#       - docker push $REPOSITORY_URI:latest
#       - docker push $REPOSITORY_URI:$IMAGE_TAG
#       - echo Writing image definitions file...
#       # Give your container name
#       - DOCKER_CONTAINER_NAME=spring-demo-container
#       - printf '[{"name":"%s","imageUri":"%s"}]' $DOCKER_CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
#       - echo $DOCKER_CONTAINER_NAME
#       - echo printing imagedefinitions.json
#       - cat imagedefinitions.json
# artifacts:
#   files:
#     - imagedefinitions.json
#     - target/springboot-aws-deploy.jar
#
####################################################################################################
version: 0.2
phases:
  install:
    commands:
      - echo Installing app dependencies...
      - curl -LO https://dl.k8s.io/release/v1.27.2/bin/linux/amd64/kubectl   
      - chmod +x ./kubectl
      - mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin
      - echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
      - source ~/.bashrc
      - echo 'Check kubectl version'
      - kubectl version --short --client
  pre_build:
    commands:
      # Login to ECR Registry for docker to push the image to ECR Repository
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region ap-southeast-1 | docker login --username AWS --password-stdin 660309174284.dkr.ecr.ap-southeast-1.amazonaws.com
      - REPOSITORY_URI=660309174284.dkr.ecr.ap-southeast-1.amazonaws.com/springdemo
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
  build:
    commands:
      # Build Docker Image
      - echo Build started on `date`
      - echo building the Jar file
      - mvn clean package
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      # Deploy .yml on eks by kubectl
      # Setup kubectl with our EKS Cluster
      - aws eks update-kubeconfig --name eksCluster-khanhtm --region ap-southeast-1
      - sed -i 's#<IMAGE_ID>#660309174284.dkr.ecr.ap-southeast-1.amazonaws.com/springdemo:'"$IMAGE_TAG"'#' application.yml
      - echo Deploying to Kubernetes...
      # Apply changes to our Application using kubectl
      - kubectl apply -f application.yml
